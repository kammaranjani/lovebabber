find largest subarray length whose sum is 0
METHOD 1:O(n^2),O(1)
#include<climits>
#include <iostream>
using namespace std;
int help(int arr[], int n){
    int m=INT_MIN;
    for(int i=0;i<n;i++){
        int cs=0;
        for(int j=i;j<n;j++){
            cs+=arr[j];
            if(cs==0)
            m=max(m,j-i+1);
        }
    }
    return m;
}
int main()
{
     
    int arr[] = {15,-2,2,-8,1,7,10,23};
    int n = sizeof(arr) / sizeof(arr[0]);
    cout <<help(arr,n);
    return 0;
}
METHOD 2:O(n),O(n)  //best
#include<unordered_map>
class Solution{
    public:
    int maxLen(vector<int>&A, int n)
    {   
        // Your code here
        int mx=0;
        unordered_map<int,int>um;
        int s=0;
        for(int i=0;i<n;i++){
            s+=A[i];
            if(s==0)
            mx=max(mx,i+1);
            if(um.count(s)){
            mx=max(mx,i-um[s]);
            }
            else{
                um[s]=i;
            }
        }
        return mx;
    }
