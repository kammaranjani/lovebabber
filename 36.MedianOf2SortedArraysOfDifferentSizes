Better:o(n+m/2)(Bruteforce is same but storing this in different array like in merging two sorted arrays)
   double MedianOfArrays(vector<int>& array1, vector<int>& array2)
    {
        int n1= array1.size();
        int n2= array2.size();
        int n=n1+n2;
        int ind2=n/2,ind1=ind2-1;
        int cnt=0,i=0,j=0;
        int firind=-1,secind=-1;
        while(i<n1&&j<n2) {
            if(array1[i]<array2[j]){
                if(cnt==ind1) firind=array1[i];
                if(cnt==ind2) secind=array1[i];
                i++;
                cnt++;
            } else {
                 if(cnt==ind1) firind=array2[j];
                if(cnt==ind2) secind=array2[j];  
                j++;
                cnt++;
            }
        }
        while (i<n1) {
                if(cnt==ind1) firind=array1[i];
                if(cnt==ind2) secind=array1[i];
                i++;
                cnt++;
        }
         while (j<n2) {
                if(cnt==ind1) firind=array2[j];
                if(cnt==ind2) secind=array2[j];
                j++;
                cnt++;
        }
    if(n%2==1) {
    return secind;
    } else {
        return (double)(firind+secind) /2.0;
    }
    return 0;
    }
Best:o(min(logn,logm)
 double MedianOfArrays(vector<int>& array1, vector<int>& array2)
    {
        int n1= array1.size();
        int n2= array2.size();
        if(n1>n2){
            return MedianOfArrays(array2,array1);
        }
        int l=0,h=n1;
        int left = (n1+n2+1)/2;
        int n= n1+n2;
        while(l<=h){
            int mid1 = (l+h) >> 1;
            int mid2 = left-mid1;
            int l1=INT_MIN,l2=INT_MIN,r1=INT_MAX,r2 = INT_MAX;
            if(mid1<n1) r1=array1[mid1];
            if(mid2<n2) r2=array2[mid2];
            if(mid1-1>=0) l1=array1[mid1-1];
            if(mid2-1>=0) l2=array2[mid2-1];
            if(l1<=r2&&l2<=r1){
                if(n%2==1){
                    return max(l1,l2);
                }
                return (double)(max(l1,l2)+min(r1,r2))/2.0;
            }
            else if(l1>r2){
                h=mid1-1;
            }
            else {
                l=mid1+1;
            }
        }
    return 0;
    }
