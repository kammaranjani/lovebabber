METHOD 1: BRUTEFORCE RECURSIVE
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;
int help(string s,string s1){
   if(s==""||s1=="")
   return 0;
   int ans;
   int a=help(s.substr(1),s1.substr(1));
   if(s[0]==s1[0])
   ans= 1+a;
   int b=help(s.substr(1),s1);
   int c=help(s,s1.substr(1));
   ans=max(a,max(b,c));
   return ans;
}
int main(){
    string s,s1;
    cin>>s>>s1;
    int res=help(s,s1);
    cout<<res<<endl;
}
METHOD 2: MEMOIZATION
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;
int help(string s,string s1,int **a){
    int m=s.size();
    int n=s1.size();
   if(s==""||s1=="")
   return 0;
   if(a[m][n]!=-1)
   return a[m][n];
   int an=help(s.substr(1),s1.substr(1),a);
   int ans;
   if(s[0]==s1[0])
   ans=1+an;
   else{
   int b=help(s.substr(1),s1,a);
   int c=help(s,s1.substr(1),a);
   ans=max(an,max(b,c));
   }
   a[m][n]=ans;
   return a[m][n];
}
int main(){
    string s,s1;
    cin>>s>>s1;
    int m=s.length();
    int n=s1.length();
    int **a=new int*[m+1];
    for(int i=0;i<m+1;i++){
        a[i]=new int[n+1];
    }
     for(int i=0;i<m+1;i++){
          for(int j=0;j<n+1;j++){
              a[i][j]=-1;
          }
     }
    int res=help(s,s1,a);
    cout<<res<<endl;
}
METHOD 3: DP
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;
int help(string s,string s1,int **a){
   
    int m=s.size();
    int n=s1.size();
     for(int i=0;i<=m;i++)
    a[i][0]=0;
    for(int j=1;j<=n;j++){
        a[0][j]=0;
    }
 for(int i=1;i<=m;i++){
     for(int j=1;j<=n;j++){
         if(s[m-i]==s1[n-j])
         a[i][j]=1+a[i-1][j-1];
         else{
             a[i][j]=max(a[i-1][j],max(a[i-1][j-1],a[i][j-1]));
         }
     }
 }
   return a[m][n];
}
int main(){
    string s,s1;
    cin>>s>>s1;
    int m=s.length();
    int n=s1.length();
    int **a=new int*[m+1];
    for(int i=0;i<m+1;i++){
        a[i]=new int[n+1];
    }
     for(int i=0;i<m+1;i++){
          for(int j=0;j<n+1;j++){
              a[i][j]=-1;
          }
     }
    int res=help(s,s1,a);
    cout<<res<<endl;
}