brute-forece:
find all combinations, sort them, find the given pattern, print next.
If given pattern is last then print first;
second: stl library function next_permutation(nums.begin(),nums.end());
best (or stl function implementation):o(n)
 void nextPermutation(vector<int>& nums) {
        int ind=-1,n=nums.size();
        for(int i=n-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                ind = i;
                break;
            }
        }
        if(ind==-1){
            reverse(nums.begin(),nums.end());
            return;
        }
        int mini= -1;
        for(int i=n-1;i>ind;i--){
            if(mini == -1){
            if(nums[i]>nums[ind]){
                mini = i;
            }
            } else {
              if(nums[i]<nums[mini]&&nums[i]>nums[ind]){
                mini = i;
            }
        }
        }
        swap(nums[mini],nums[ind]);
        reverse(nums.begin()+ind+1,nums.end());
    }
