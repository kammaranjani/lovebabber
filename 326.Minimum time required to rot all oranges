    int orangesRotting(vector<vector<int>>& grid) {
        queue<pair<int,int>>q;
        int n=grid.size(),m=grid[0].size();
        int c=0,t1=0;
        vector<vector<bool>>vis(n,vector<bool>(m,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2){
                    c++;
                    q.push({i,j});
                    vis[i][j]=1;
                } else if(grid[i][j]==0){
                  t1++;  
                }
            }
        }
        int t=0;
        while(q.size()){
            int si=q.size();
            for(int i=0;i<si;i++){
                pair<int,int> p = q.front();
                q.pop();
                int ro[] = {-1,0,1,0};
                int co[] = {0,-1,0,1};
                for(int k=0;k<4;k++){
                    int roel= p.first+ro[k];
                    int coel = p.second+co[k];
                   
                    if(roel<n&&roel>=0&&coel>=0&&coel<m&&!vis[roel][coel]&&grid[roel][coel]!=0) {
                        vis[roel][coel]=1;
                        q.push({roel,coel});
                        c++;
                    }
                }
            }
            t++;
        }
        if(c==n*m-t1){
            return (t-1)>=0?t-1:0;
        }
        else 
        return -1;
    }
