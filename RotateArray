Rotate by one element: o(n),o(1)  (striver video)
void rotate(int arr[], int n)
{
    int ele = arr[n-1];
    for(int i=n;i>=1;i--){
        arr[i] = arr[i-1];
    }
    arr[0] = ele;
}
Rotate array to right: 
better: o(n)+o(n-d)+o(d)=o(n+d),o(d)
 void rotate(vector<int>& nums, int k) {
        int n= nums.size();
        if(n<=0)
        return;
        int d = k%n;
        vector<int>temp;
        for(int i=n-d;i<n;i++){
            temp.push_back(nums[i]);
        }
        for(int i=n-d-1;i>=0;i--){
            nums[i+d]=nums[i];
        }
        cout<<temp.size();
        for(int i=0;i<d;i++){
            nums[i]=temp[i];
        }
    }

best: o(2n),o(1)
 void rotate(vector<int>& nums, int k) {
        int n= nums.size();
        if(n<=0)
        return;
        int d = k%n;
        reverse(nums.begin(),nums.begin()+(n-d));
        reverse(nums.begin()+(n-d),nums.end());
        reverse(nums.begin(),nums.end());
    }
