unordered_map<string,int>um;
#include<bits/stdc++.h>
int help(string A, string B, string C, int s1, int s2, int s3, int n1, int n2, int n3){
    if(s1==n1||s2==n2||s3==n3)
    return 0;
    string s=to_string(s1)+'*'+to_string(s2)+'*'+to_string(s3);
    if(um.find(s)!=um.end())
    return um[s];
    if(A[s1]==B[s2]&&A[s1]==C[s3])
    return um[s]=1+help(A,B,C,s1+1,s2+1,s3+1,n1,n2,n3);
    return um[s]=max(help(A,B,C,s1,s2+1,s3,n1,n2,n3),max(help(A,B,C,s1+1,s2,s3,n1,n2,n3),help(A,B,C,s1,s2,s3+1,n1,n2,n3)));
}
int LCSof3 (string A, string B, string C, int n1, int n2, int n3)
{
    um.clear();
    return help(A,B,C,0,0,0,n1,n2,n3);
}Â   
