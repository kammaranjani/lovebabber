Method memoization, recursion: o(n), o(n)
int help(int n, int x, int y, int z,vector<int> &dp){
        if(n<0)
        return INT_MIN;
          if(n==0)
        return 0;
        if(dp[n]!=-1)
        return dp[n];
        int xa=help(n-x,x,y,z,dp);
        int ya=help(n-y,x,y,z,dp); 
        int za=help(n-z,x,y,z,dp);
        dp[n]=1+max(xa,max(ya,za));
        return dp[n];
    }
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        vector<int>dp(n+1,-1);
        return max(0,help(n,x,y,z,dp));
    }
    Method DP o(n), o(n)
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        vector<int>dp(n+1,-1);
        dp[0]=0;
        for(int i=1;i<=n;i++){
            int ans=0;
        int xa=INT_MIN,ya=INT_MIN,za=INT_MIN;
        if(i>=x)
        xa=dp[i-x];
        if(i>=y)
        ya=dp[i-y]; 
        if(i>=z)
        za=dp[i-z];
        ans=max(xa,max(ya,za));
        dp[i]=1+ans;
        }
        return max(0,dp[n]);
    }
