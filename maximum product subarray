bruteforce:o(n^3),o(1)
find all subsequences and from them max
better:o(n^2),o(1)
same
best:o(n),o(1)
long long maxProduct(vector<int> arr, int n) {
	    if(n<=1){
	        return arr[0];
	    }
	    long long ans=INT_MIN,nz=0,np=0,nn=0,pref=1,suf=1;
	    for(int i=0;i<n;i++){
	     pref=pref*arr[i];
	     suf=suf*arr[n-i-1];
	     if(arr[i]==0){
	         pref=1;
	         nz++;
	     }
	     if(arr[n-i-1]==0){
	         suf=1;
	     }
	     if(arr[i]>0){
	         np++;
	     }
	     ans=max(ans,max(pref,suf));
	    }
	    nn=n-np-nz;
	    if(np==0){
	        if(nz>0&&(nn%2==1))
	        return 0;
	    }
	    return ans;
	}
